{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/oscar/OneDrive/Escritorio/Redes de computadoras III/Proyecto Final/ProyectoRedesIII/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfirebase.initializeApp(environment.firebaseConfig);\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.storeRef = firebase.app().storage().ref();\n    this.API_URI = 'http://localhost:3000/api'; //Como atributo la dirección del servidor\n  }\n\n  getUsers() {\n    return this.http.get(`${this.API_URI}/users`);\n  }\n\n  getUser(id) {\n    return this.http.get(`${this.API_URI}/users/${id}`);\n  }\n\n  deleteUser(id) {\n    return this.http.delete(`${this.API_URI}/users/${id}`);\n  }\n\n  saveUser(user) {\n    // const fd = new FormData();\n    // fd.append('email', user.email || '');\n    // fd.append('password', user.password || '');\n    return this.http.post(`${this.API_URI}/users/`, user);\n  }\n\n  verifyEmail(email) {\n    return this.http.get(`${this.API_URI}/users/verify-isExistEmial/${email}`);\n  }\n\n  updateUser(id, updateUser) {\n    // const fd = new FormData();\n    // fd.append('email', updateUser.email || '');\n    // fd.append('password', updateUser.password || '');\n    return this.http.put(`${this.API_URI}/users/${id}`, updateUser);\n  }\n\n  login(user) {\n    return this.http.post(`${this.API_URI}/users/login`, user);\n  }\n\n  loadImg(email, imgBase64) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(email);\n      console.log(imgBase64);\n\n      try {\n        let respuesta = yield _this.storeRef.child(\"users/\" + email).putString(imgBase64, 'data_url');\n        console.log(respuesta);\n        return respuesta.ref.getDownloadURL();\n      } catch (err) {\n        console.log(err);\n        return null;\n      }\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/oscar/OneDrive/Escritorio/Redes de computadoras III/Proyecto Final/ProyectoRedesIII/client/src/app/services/user_service/user.service.ts"],"names":["firebase","environment","i0","i1","initializeApp","firebaseConfig","UserService","constructor","http","storeRef","app","storage","ref","API_URI","getUsers","get","getUser","id","deleteUser","delete","saveUser","user","post","verifyEmail","email","updateUser","put","login","loadImg","imgBase64","console","log","respuesta","child","putString","getDownloadURL","err","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/storage';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nfirebase.initializeApp(environment.firebaseConfig);\r\nexport class UserService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.storeRef = firebase.app().storage().ref();\r\n        this.API_URI = 'http://localhost:3000/api'; //Como atributo la dirección del servidor\r\n    }\r\n    getUsers() {\r\n        return this.http.get(`${this.API_URI}/users`);\r\n    }\r\n    getUser(id) {\r\n        return this.http.get(`${this.API_URI}/users/${id}`);\r\n    }\r\n    deleteUser(id) {\r\n        return this.http.delete(`${this.API_URI}/users/${id}`);\r\n    }\r\n    saveUser(user) {\r\n        // const fd = new FormData();\r\n        // fd.append('email', user.email || '');\r\n        // fd.append('password', user.password || '');\r\n        return this.http.post(`${this.API_URI}/users/`, user);\r\n    }\r\n    verifyEmail(email) {\r\n        return this.http.get(`${this.API_URI}/users/verify-isExistEmial/${email}`);\r\n    }\r\n    updateUser(id, updateUser) {\r\n        // const fd = new FormData();\r\n        // fd.append('email', updateUser.email || '');\r\n        // fd.append('password', updateUser.password || '');\r\n        return this.http.put(`${this.API_URI}/users/${id}`, updateUser);\r\n    }\r\n    login(user) {\r\n        return this.http.post(`${this.API_URI}/users/login`, user);\r\n    }\r\n    async loadImg(email, imgBase64) {\r\n        console.log(email);\r\n        console.log(imgBase64);\r\n        try {\r\n            let respuesta = await this.storeRef.child(\"users/\" + email).putString(imgBase64, 'data_url');\r\n            console.log(respuesta);\r\n            return respuesta.ref.getDownloadURL();\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            return null;\r\n        }\r\n    }\r\n}\r\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}